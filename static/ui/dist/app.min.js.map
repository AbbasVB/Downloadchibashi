{"version":3,"sources":["core/core.module.js","media/media.module.js","filmjoo/filmjoo.module.js","stuff/stuff.module.js","user/user.module.js","core/controllers/core-reset.controller.js","core/controllers/core-sign-up.controller.js","core/controllers/core.controller.js","core/services/core-settings.service.js","core/services/core.impl.js","core/services/settings.service.js","core/services/uri-manager.service.js","media/config/media.routes.js","media/controllers/media-by-url.controller.js","media/controllers/media-select-quality.controller.js","media/controllers/media-zip-modal.controller.js","media/controllers/media.controller.js","media/services/media.impl.js","media/services/media.model.js","filmjoo/config/filmjoo.routes.js","filmjoo/controllers/filmjoo.controller.js","filmjoo/controllers/filmjoo.getMovie.controller.js","filmjoo/services/stuff.impl.js","filmjoo/services/stuff.model.js","stuff/config/stuff.routes.js","stuff/controllers/stuff.controller.js","stuff/services/stuff.impl.js","stuff/services/stuff.model.js","user/config/user.routes.js","user/controllers/user-add-feedback.controller.js","user/controllers/user-purchase.controller.js","user/controllers/user-subscribe.controller.js","user/controllers/user.controller.js","user/services/user.impl.js","user/services/user.model.js"],"names":["angular","module","controller","$scope","$uibModalInstance","CoreImpl","impl","model","dismissModal","reset","signUp","loginIt","login","passRemeber","Settings","ngNotify","session","openResetModal","status","set","message","feedbacktitle","openAddFeedbackModal","openSignUpModal","openPurchaseModal","factory","$rootScope","$window","filter","$sce","text","trustAsHtml","User","$interval","$uibModal","then","resp","close","window","location","assign","reload","err","console","log","open","size","templateUrl","result","dismiss","password","confirmPassword","email","confirmEmail","setTimeout","settings","$q","$http","serialize","uri","i","arguments","length","resolve","params","deferred","defer","method","url","apply","this","path","data","reject","promise","devResolve","fromJson","object","multiple","thumb_url","quality","17","140","141","160","36","43","133","5","18","242","278","250","251","249","171","title","name","percent","Math","ceil","random","time","History","date","config","$urlRouterProvider","$stateProvider","$locationProvider","otherwise","state","$state","MediaImpl","downloads","getInfo","info","forEach","value","key","toLowerCase","indexOf","download","implCore","feedbackmessage","openHistoricSelectQualityModal","openZipModal","Media","infoList","openSelectQualityModal","copy","unshift","progress","interval","cancel","UriManager","uriManager","$stateParams","movieid","get","response","JSON","parse","getinfo","vid","go","searchit","search","searchnames","searchSuggest","$item","movies","searchwords","refreshMovies","getclips","searchtitle","wronginformations","morality","searchsubtitles","subtitles","Stuff","StuffImpl","downloadit","feedbacks","UserImpl","addFeedback","purchase","Upload","userurl","submit","form","file","$valid","upload","evt","progressPercentage","parseInt","loaded","total","subscribe","uiGridConstants","refresh","getPagePremium","getCredit","feedback","openSubscribeModal","getPage","getPurchesList","downloadsHistory","paginationOptions","downloadsHistoryPremium","downloadsPremiumPurchesPackage","premiumCredit","pageNumber","pageSize","sort","listname","gridOptions","paginationPageSizes","paginationPageSize","useExternalPagination","useExternalSorting","enableSorting","enableColumnMenus","columnDefs","field","onRegisterApi","gridApi","core","on","sortChanged","grid","sortColumns","direction","pagination","paginationChanged","newPage","totalItems","rowcount","cellTemplate","newsletter","alert","cost","userCredit","restCredit","userUsage","totalCredit"],"mappings":"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","file":"app.min.js","sourcesContent":["(function(undefined){\n    'use strict';\n\n    angular.module('core', [\n        'ui.bootstrap',\n        'ui.router',\n        'blockUI',\n\t    'ngNotify',\n        'ngFileUpload',\n        'ngSanitize',\n    ]);\n})();\n","(function(undefined){\n    'use strict';\n\n    angular.module('media', ['core']);\n})();","(function(undefined){\n    'use strict';\n\n    angular.module('filmjoo', ['core','ui.select','ngSanitize']);\n})();\n","(function(undefined){\n    'use strict';\n\n    angular.module('stuff', ['core']);\n})();","(function(undefined){\n    'use strict';\n\n    angular.module('user', ['core','ui.grid', 'ui.grid.resizeColumns', 'ui.grid.pagination', 'ui.bootstrap']);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('core')\n        .controller('CoreResetController', [\n            '$scope',\n            '$uibModalInstance',\n            'CoreImpl',\n            function ($scope, $uibModalInstance, CoreImpl) {\n                var impl = new CoreImpl($scope, $uibModalInstance);\n                $scope.model = {};\n\n                $scope.dismissModal = impl.dismissModal;\n                $scope.reset = impl.reset;\n\n            }\n        ]);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('core')\n        .controller('CoreSignUpController', [\n            '$scope',\n            '$uibModalInstance',\n            'CoreImpl',\n            function ($scope, $uibModalInstance, CoreImpl) {\n                var impl = new CoreImpl($scope, $uibModalInstance);\n                $scope.model = {};\n\n                $scope.dismissModal = impl.dismissModal;\n                $scope.signUp = impl.signUp;\n                $scope.loginIt = impl.login;\n                $scope.passRemeber = impl.passRemeber;\n            }\n        ]);\n})();","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('core')\n        .controller('CoreController', [\n            '$scope',\n            'CoreImpl',\n            'Settings',\n            'ngNotify',\n            function ($scope, CoreImpl, Settings, ngNotify) {\n                var impl = new CoreImpl($scope);\n\n\n                 if(Settings.session && Settings.session.reset) {\n                   impl.openResetModal();\n                   Settings.session.reset = null;\n                 }\n\n                 if(Settings.session && Settings.session.status) {\n                   ngNotify.set(Settings.session.message, Settings.session.status);\n                   Settings.session.status = null;\n                 }\n\n                 if(Settings.session && Settings.session.feedbacktitle) {\n                   impl.openAddFeedbackModal();\n                 }\n\n                $scope.openResetModal = impl.openResetModal;\n                $scope.openSignUpModal = impl.openSignUpModal;\n                $scope.openPurchaseModal = impl.openPurchaseModal;\n                $scope.openAddFeedbackModal = impl.openAddFeedbackModal;\n            }\n        ]);\n})();\n","(function(undefined){\n  'use strict';\n\n  angular.module('core')\n  .factory('Session', ['$rootScope', '$window',function($rootScope, $window) {\n    $rootScope.session = $window.session;\n    return $rootScope.session;\n  }]);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('core')\n        .filter('trustAsHtml', ['$sce', function ($sce) {\n            return function (text) {\n            return $sce.trustAsHtml(text);\n            };\n         }])\n        .factory('CoreImpl', [\n            'User',\n            '$interval',\n            '$uibModal',\n            'ngNotify',\n            function (User, $interval, $uibModal, ngNotify) {\n                return function ($scope, $uibModalInstance) {\n\n                  var openResetModal = function () {\n                      $uibModal\n                          .open({\n                              size: 'sm',\n                              templateUrl: 'static/ui/modules/core/views/core-reset-modal.html',\n                              controller: 'CoreResetController'\n                          });\n                  };\n\n                    var openSignUpModal = function () {\n                        $uibModal\n                            .open({\n                                size: 'sm',\n                                templateUrl: 'static/ui/modules/core/views/core-sign-up-modal.html',\n                                controller: 'CoreSignUpController'\n                            });\n                    };\n\n                    var openAddFeedbackModal = function () {\n                      $uibModal\n                        .open({\n                          templateUrl: 'static/ui/modules/user/views/user-add-feedback.html',\n                          controller: 'UserAddFeedbackController'\n                        })\n                        .result.then(function (resp) {\n                        if (resp.status == 'ok') {\n                          //  $scope.feedbacks.push(resp.object);\n                        }\n                      });\n                    };\n\n                    var dismissModal = function () {\n                        $uibModalInstance.dismiss();\n                    };\n\n                    var signUp = function () {\n                        if($scope.model.password != $scope.model.confirmPassword) {\n                            ngNotify.set('کلمه عبور با تکرار ان مطابقت ندارد', 'error');\n                            return;\n                        }\n\n                        if($scope.model.email != $scope.model.confirmEmail) {\n                            ngNotify.set('پست الکترونیکی با تکرار ان مطابقت ندارد', 'error');\n                            return;\n                        }\n\n                        User.signUp($scope.model)\n                            .then(function (resp) {\n                                if (resp.status != 'ok') {\n                                    ngNotify.set(resp.message, 'error');\n                                    return;\n                                }\n\n                                //$uibModalInstance.close(resp);\n                                ngNotify.set(resp.message);\n                                setTimeout(function(){ login(); }, 3000);\n                            }, function (err) {\n                                console.log(err);\n                                ngNotify.set(err);\n                            });\n\n                    };\n\n\n                    var reset = function () {\n                        if($scope.model.password != $scope.model.confirmPassword) {\n                             ngNotify.set('کلمه عبور با تکرار ان مطابقت ندارد', 'error');\n                            return;\n                        }\n\n                        User.reset($scope.model)\n                            .then(function (resp) {\n                                if (resp.status != 'ok') {\n                                    ngNotify.set(resp.message, 'error');\n                                    return;\n                                }\n\n\n                                ngNotify.set(resp.message);\n                                $uibModalInstance.close(resp);\n                            }, function (err) {\n                                console.log(err);\n                                ngNotify.set(err);\n                            });\n\n                    };\n\n\n                    var login = function() {\n\n                     User.login($scope.model).then(function (resp) {\n                                if (resp.status != 'ok') {\n                                    ngNotify.set(resp.message, 'error');\n                                    return;\n                                }\n\n                                $uibModalInstance.close(resp);\n                                ngNotify.set(resp.message);\n                                window.location.assign('#/user');\n                                location.reload();\n\n                            }, function (err) {\n                                ngNotify.set(err, 'error');\n                                console.log(err);\n                            });\n\n                    };\n\n                    var passRemeber = function(){\n                      User.passRemeber($scope.model).then(function (resp) {\n                                 if (resp.status != 'ok') {\n                                     ngNotify.set(resp.message, 'error');\n                                     return;\n                                 }\n                                 $uibModalInstance.close(resp);\n                                 ngNotify.set(resp.message);\n                             }, function (err) {\n                                 ngNotify.set(err, 'error');\n                                 console.log(err);\n                             });\n                    }\n\n\n                    var openPurchaseModal = function () {\n                     $uibModal\n                       .open({\n                         templateUrl: 'static/ui/modules/user/views/user-purchase.html',\n                         controller: 'UserPurchaseController'\n                       })\n                       .result.then(function (resp) {\n                            console.log(resp);\n                     });\n                    };\n\n\n\n                    return {\n                        openResetModal: openResetModal,\n                        openSignUpModal: openSignUpModal,\n                        openAddFeedbackModal: openAddFeedbackModal,\n                        dismissModal: dismissModal,\n                        signUp: signUp,\n                        login: login,\n                        reset:reset,\n                        passRemeber:passRemeber,\n                        openPurchaseModal:openPurchaseModal\n                    }\n                }\n            }\n        ]);\n})();\n","(function(undefined){\n  'use strict';\n\n  angular.module('core')\n  .factory('Settings', ['$rootScope', '$window',function($rootScope, $window) {\n    var settings = {};\n    settings.session = $rootScope.session = $window.session;\n    return settings;\n  }]);\n})();\n","'use strict';\n\n(function (undefined) {\n    angular\n        .module('core')\n        .factory('UriManager', [\n            '$q',\n            '$http',\n            function ($q, $http) {\n                var baseUri = '';\n                return function (module) {\n                    var serialize = function () {\n                        var uri = baseUri + module;\n                        for (var i = 0; i < arguments.length; i++) {\n                            uri += '/' + arguments[i];\n                        }\n                        return uri;\n                    };\n\n                    var devResolve = function (params) {\n                        var url = serialize.apply(this, params.path);\n\n                        switch (url) {\n                            case 'media/info':\n                                return angular.fromJson({\n                                    \"status\": \"ok\",\n                                    \"object\": {\n                                        \"multiple\": false,\n                                        \"thumb_url\": \"https://i.ytimg.com/vi/MnFkC1VG8rs/hqdefault.jpg\",\n                                        \"quality\": {\n                                            \"17\": \"3gp - 176x144 (small)\",\n                                            \"140\": \"m4a - audio only (DASH audio)\",\n                                            \"141\": \"m4a - audio only (DASH audio)\",\n                                            \"160\": \"mp4 - 192x144 (DASH video)\",\n                                            \"36\": \"3gp - 320x240 (small)\",\n                                            \"43\": \"webm - 640x360 (medium)\",\n                                            \"133\": \"mp4 - 320x240 (DASH video)\",\n                                            \"5\": \"flv - 400x240 (small)\",\n                                            \"18\": \"mp4 - 640x360 (medium) (best)\",\n                                            \"242\": \"webm - 320x240 (DASH video)\",\n                                            \"278\": \"webm - 192x144 (DASH video)\",\n                                            \"250\": \"webm - audio only (DASH audio)\",\n                                            \"251\": \"webm - audio only (DASH audio)\",\n                                            \"249\": \"webm - audio only (DASH audio)\",\n                                            \"171\": \"webm - audio only (DASH audio)\"\n                                        },\n                                        \"title\": \"\\u067e\\u0633\\u0631 \\u0634\\u062c\\u0627\\u0639 - \\u0648\\u06cc\\u06a9\\u06cc\\u0648\\u0632\"\n                                    }\n                                });\n                            case 'media/download':\n                                return angular.fromJson({\n                                    \"status\": \"ok\",\n                                    \"object\": {\n                                        \"url\": \"https://www.youtube.com/watch?v=MnFkC1VG8rs\",\n                                        \"name\": \"844bbc32-e87a-4c24-81cd-f7d1ff3905a3.txt\"\n                                    }\n                                });\n                            case 'media/state/844bbc32-e87a-4c24-81cd-f7d1ff3905a3.txt':\n                                var percent = Math.ceil(Math.random() * 5) * 20;\n                                return angular.fromJson({\n                                    \"status\": \"ok\",\n                                    \"object\": {\n                                        \"time\": \"00:00\",\n                                        \"percent\": percent,\n                                        \"name\": \"2015-12-16_05:03:57.zip\",\n                                        \"size\": \"8.76MiB\"\n                                    }\n                                });\n\n                            case 'user/signUp':\n                                return angular.fromJson({\"status\": \"ok\", \"message\": \"your message save successfully\"});\n                            case 'user/feedback':\n                                return angular.fromJson({\"status\": \"ok\", \"message\": \"your message save successfully\"});\n                            case 'user/newsletter':\n                                return angular.fromJson({\"status\": \"ok\", \"message\": \"your message save successfully\"});\n                            case 'user/downloadsHistory':\n                                var History = [\n                                    {title:'test1',url:'http://test1.com',date:'2016', size:'55M'},\n                                    {title:'test2',url:'http://test2.com',date:'2016', size:'55M'},\n                                    {title:'test3',url:'http://test3.com',date:'2016', size:'55M'},\n                                    {title:'test4',url:'http://test4.com',date:'2016', size:'55M'}\n                                ];\n                                return angular.fromJson({\n                                    \"status\": \"ok\",\n                                    \"object\": {\n                                        \"History\": History\n                                    }\n                                });\n                            \n                        }\n                    };\n\n\n                    var resolve = function (params) {\n                        var deferred = $q.defer();\n\n                        //deferred.resolve(devResolve(params));\n\n                        $http({\n                            method: params.method,\n                            url: serialize.apply(this, params.path),\n                            data: params.data\n                        }).then(function (resp) {\n                            deferred.resolve(resp.data);\n                        }, function (err) {\n                            deferred.reject(err);\n                        });\n\n                        return deferred.promise;\n                    };\n\n                    return {\n                        serialize: serialize,\n                        resolve: resolve,\n                        devResolve: devResolve\n                    }\n                }\n            }\n        ]\n    );\n})();\n","(function(undefined){\n    'use strict';\n\n    angular\n        .module('media')\n        .config(['$urlRouterProvider', '$stateProvider', '$locationProvider',\n            function ($urlRouterProvider, $stateProvider, $locationProvider) {\n\n                /*$urlRouterProvider.otherwise(function ($injector) {\n                    $injector.get('$state').transitionTo('root', null, {location: false});\n                });*/\n                $urlRouterProvider.otherwise('/');\n\n                $stateProvider\n                    .state('media', {\n                        url: '/',\n                        templateUrl: '/static/ui/modules/media/views/media-index.html',\n                        controller: 'MediaController'\n                    })\n                    // .state('byUrl', {\n                    //     url: '/byUrl/:url',\n                    //     templateUrl: 'static/ui/modules/media/views/media-index.html',\n                    //     controller: 'MediaByUrlController'\n                    // })\n                ;\n            }\n        ]);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('media')\n        .controller('MediaByUrlController', [\n            '$scope',\n            '$state',\n            'MediaImpl',\n            function ($scope, $state, MediaImpl) {\n                var impl = new MediaImpl($scope);\n                $scope.model = {\n                    url: $state.params.url\n                };\n                $scope.downloads = [];\n                $scope.getInfo = impl.getInfo;\n\n                // get url info on init\n                impl.getInfo();\n            }\n        ]);\n})();","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('media')\n        .controller('MediaSelectQualityController', [\n            '$scope',\n            '$uibModalInstance',\n            'info',\n            'model',\n            'MediaImpl',\n            function ($scope, $uibModalInstance, info, model, MediaImpl) {\n                var impl = new MediaImpl($scope, $uibModalInstance);\n\n                $scope.model = model;\n                $scope.info = info;\n\n                angular.forEach(info.quality, function(value, key) {\n                  if(value.toLowerCase().indexOf('best') >= 0) {\n                    $scope.model.quality = key;\n                    return;\n                  }\n                });\n\n                $scope.dismissModal = impl.dismissModal;\n                $scope.download = impl.download;\n            }\n        ]);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('media')\n        .controller('MediaZipController', [\n            '$scope',\n            '$uibModalInstance',\n            'MediaImpl',\n            function ($scope, $uibModalInstance, MediaImpl) {\n                var impl = new MediaImpl($scope, $uibModalInstance);\n                $scope.model = {};\n\n                $scope.dismissModal = impl.dismissModal;\n                //$scope.signUp = impl.signUp;\n            }\n        ]);\n})();","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('media')\n        .controller('MediaController', [\n            '$scope',\n            'MediaImpl',\n            'Settings',\n            'CoreImpl',\n            '$state',\n            function ($scope, MediaImpl, Settings, CoreImpl, $state) {\n                var impl = new MediaImpl($scope);\n                var implCore = new CoreImpl($scope);\n                $scope.model = {\n                  url: Settings.session ? Settings.session.url : null\n                };\n                $scope.downloads = Settings.downloads ? Settings.downloads : [];\n                \n                $scope.getInfo = function() {\n                    // REMEMBER: this section can redirect all download request to premium section\n                    // if(Settings.session.username) {\n                    //     Settings.session.userurl = $scope.model.url;\n                    //     $scope.model.url = null; \n                    //     $state.go('user');\n                    //     return;\n                    // }\n                    if ($scope.model.url.indexOf(\"youtube.\") !=-1 && ($scope.model.url.indexOf(\"list=\") !=-1  || $scope.model.url.indexOf(\"/channel/\") !=-1  || $scope.model.url.indexOf(\"/user/\") !=-1 )) {\n                            Settings.session.feedbacktitle = 'توجه'\n                            Settings.session.feedbackmessage = '<p>شما درخواست دانلود یک لیست و یا کانال ویدیویی را داده اید، دانلود اینگونه موارد در <b>بخش ویژه</b>امکان پذیر است، خواهشا نسبت به ثبت نام در این بخش اقدام بفرمایید</p>'\n                            implCore.openAddFeedbackModal();      \n                        return ;\n                    } else {\n                        impl.getInfo();\n                    }\n                }\n\n\t\t$scope.openHistoricSelectQualityModal = impl.openHistoricSelectQualityModal;\n\n                if(Settings.session && Settings.session.url) {\n                  impl.getInfo();\n\t\t          Settings.session.url = null; \n                }\n\n                $scope.openZipModal = impl.openZipModal;\n\n            }\n        ]);\n})();\n","(function (undefined) {\n  'use strict';\n\n  angular\n    .module('media')\n    .factory('MediaImpl', [\n      'Media',\n      '$interval',\n      '$uibModal',\n      'ngNotify',\n      'Settings',\n      'CoreImpl',\n      function (Media, $interval, $uibModal, ngNotify, Settings, CoreImpl) {\n        var infoList = {};\n        return function ($scope, $uibModalInstance) {\n          var implCore = new CoreImpl($scope);\n          var openZipModal = function () {\n            $uibModal\n              .open({\n                templateUrl: 'static/ui/modules/media/views/media-zip-modal.html',\n                controller: 'MediaZipController',\n                resolve: {\n                  info: function () {\n                    //return info;\n                    return \"Hi\";\n                  },\n                  model: function () {\n                    //return angular.copy(url ? {url: url} : $scope.model);\n                    return $scope.model;\n                  }\n                }\n              })\n              .result.then(function (resp) {\n              $scope.model = {};\n            });\n          };\n\n\n          var openSelectQualityModal = function (info, url) {\n            $uibModal\n              .open({\n                templateUrl: 'static/ui/modules/media/views/media-select-quality.html',\n                controller: 'MediaSelectQualityController',\n                resolve: {\n                  info: function () {\n                    return info;\n                  },\n                  model: function () {\n                    return angular.copy(url ? {url: url} : $scope.model);\n                  }\n                }\n              })\n              .result.then(function (resp) {\n              $scope.model = {};\n              resp.object.title = infoList[resp.object.url]['title'];\n              $scope.downloads.unshift(resp.object);\n              Settings.downloads = $scope.downloads;\n            });\n          };\n\n          var getInfo = function () {\n            Media.getInfo($scope.model)\n              .then(function (resp) {\n                if (resp.status == 'ok') {\n                  openSelectQualityModal(resp.object);\n                  infoList[$scope.model.url] = resp.object;\n                } else if ( resp.status == 'alert')  {\n                  //ngNotify.set('متاسفانه امکان دانلود این ادرس هنوز وجود ندارد!', 'error');\n                        Settings.session.feedbacktitle = 'توجه';\n                        Settings.session.feedbackmessage = resp.message;\n                        implCore.openAddFeedbackModal();\n                  } else {\n                       ngNotify.set(resp.message, 'error');\n                  }\n              }, function (err) {\n                ngNotify.set('امکان برقراری ارتباط با سرور موجود نمی باشد', 'error');\n              });\n          };\n          var openHistoricSelectQualityModal = function (url) {\n            openSelectQualityModal(infoList[url], url);\n          }\n\n          var dismissModal = function () {\n            $uibModalInstance.dismiss();\n          };\n\n          var handleProgress = function (name) {\n            var interval = $interval(function () {\n              Media.state(name)\n                .then(function (resp) {\n                  if (resp.status != 'ok') {\n                    ngNotify.set('متاسفانه مشکلی در روند دانلود بوجود امده، لطفا با مدیر سیستم تماس حاصل بفرمایید', 'error');\n                    $interval.cancel(interval);\n                    interval = undefined;\n                    $scope.progress = null;\n                    return;\n                  }\n\n                  if (resp.object.percent == 100 && resp.object.name) {\n                    $interval.cancel(interval);\n                    interval = undefined;\n                    $scope.progress = null;\n                    $uibModalInstance.close(resp);\n                    return;\n                  }\n\n                  if (resp.object.percent > 0)\n                    $scope.progress = resp.object;\n                });\n            }, 7000)\n          };\n\n          var download = function () {\n            $scope.progress = {percent: 1};\n            Media.download($scope.model)\n              .then(function (resp) {\n                if (resp.status != 'ok') {\n                  console.log(resp.message);\n                  return;\n                }\n\n                handleProgress(resp.object.name);\n              }, function (err) {\n                console.log(err);\n              });\n          };\n\n          return {\n            openZipModal: openZipModal,\n            getInfo: getInfo,\n            dismissModal: dismissModal,\n            openHistoricSelectQualityModal: openHistoricSelectQualityModal,\n            download: download\n          }\n        }\n      }\n    ]);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('media')\n        .factory('Media', [\n            'UriManager',\n            function (UriManager) {\n\n                var uriManager = new UriManager('media');\n\n                return {\n                    getInfo: function (data) {\n                        return uriManager.resolve({\n                            method: 'POST',\n                            path: ['info'],\n                            data: data\n                        });\n                    },\n                    download: function (data) {\n                        return uriManager.resolve({\n                            method: 'POST',\n                            path: ['download'],\n                            data: data\n                        });\n                    },\n                    state: function (name) {\n                        return uriManager.resolve({\n                            method: 'GET',\n                            path: ['state', name]\n                        });\n                    }\n\n                }\n            }\n        ]);\n})();","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('filmjoo')\n        .config(['$urlRouterProvider', '$stateProvider', '$locationProvider',\n            function ($urlRouterProvider, $stateProvider, $locationProvider) {\n\n                /*$urlRouterProvider.otherwise(function ($injector) {\n                 $injector.get('$state').transitionTo('root', null, {location: false});\n                 });*/\n                $urlRouterProvider.otherwise('/');\n\n                $stateProvider\n                .state('filmjoo', {\n                    url: '/filmjoo/:movieid',\n                    templateUrl: 'static/ui/modules/filmjoo/views/filmjoo-index.html',\n                    controller: 'FilmjooController'\n                })\n                .state('filmjoogetmovie', {\n                    url: '/filmjoo/getmovie/:movieid',\n                    templateUrl: 'static/ui/modules/filmjoo/views/filmjoo-getmovie.html',\n                    controller: 'FilmjooGetMovieController'\n                })\n                ;\n            }\n        ]);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('filmjoo')\n        .controller('FilmjooController', [\n            '$scope',\n      \t    '$http',\n      \t    '$state',\n      \t    'ngNotify',\n      \t    'Settings',\n\t    '$stateParams',\n            function ($scope,$http,$state,ngNotify,Settings,$stateParams) {\n\n\t\tif($stateParams.movieid) {\n\t\t        $http.get(\"/filmjoo/get_movie/\" + $stateParams.movieid)\n\t\t        .then(function (response) {\n\t\t                //console.log(response.data.object);\n\t\t                //ngNotify.set(response.data.object);\n\t\t                $scope.result = JSON.parse(response.data.object);\n\t\t        });\n\t\t}\n\n\n    \t\t$scope.getinfo = function(vid) {\n    \t\t\t$state.go('filmjoogetmovie', { 'movieid':vid });\n    \t\t};\n\n            \t$scope.searchit = function() {\n                    $http.get(\"filmjoo/search/\" + $scope.search)\n                    .then(function (response) {\n                            //console.log(response.data.object);\n                            $scope.searchnames = JSON.parse(response.data.object);\n                    });\n\n               }\n\n\t\t$scope.searchSuggest =  function($item) {\n\t\t\t$state.go('filmjoo', { 'movieid':$item.data });\n\t\t}\n\n\n\t\t$scope.movies = {};\n\t\t$scope.searchwords = \"\";\n\n\t\t$scope.refreshMovies = function(movies) {\n\t\t\tif(movies.length !== 0 ) {\n\t\t\t\t  $scope.searchwords = movies;\n\t\t\t\t    return $http.get(\n\t\t\t\t      'filmjoo/search/'+movies\n\t\t\t\t    ).then(function(response) {\n\t\t\t\t\t//console.log(JSON.parse(response.data.object));\n\t\t\t\t      $scope.movies = JSON.parse(response.data.object)\n\t\t\t\t    });\n\t\t\t}\n\t\t}\n\n\n\t\t$scope.getclips = function(title) {\n                      $state.go('stuff', { 'searchtitle':title });\n                  };\n\n                $scope.wronginformations = function(vid) {\n                      \t    $http.get(\"filmjoo/send_faulty/\" + vid)\n\t\t            .then(function (response) {\n\t\t                    //$scope.searchnames = JSON.parse(response.data.object);\n\t\t                      ngNotify.set(response.data.object, 'success');\n\t\t            });\n                  };\n\n                $scope.morality = function(vid) {\n\n\t\t            $http.get(\"filmjoo/send_report/\" + vid)\n\t\t            .then(function (response) {\n\t\t                    //$scope.searchnames = JSON.parse(response.data.object);\n\t\t                      ngNotify.set(response.data.object, 'warn');\n\t\t            });\n                  };\n\n\t\t$scope.searchsubtitles = function(vid, title) {\n\t\t\t    $http.get(\"filmjoo/search_subtitle/\" + vid + '/' + title )\n\t\t            .then(function (response) {\n\t\t\t\t    //console.log(response.data.object);\n\t\t                    //$scope.subtitles = JSON.parse(response.data.object);\n\t\t\t\t    if(response.data.object) {\n\t\t\t\t\t    $scope.subtitles = response.data.object;\n\t\t\t\t    } else {\n\t\t\t\t\t    ngNotify.set(\"متاسفانه زیرنویسی یافت نشد\", 'error');\n\t\t\t\t    }\n\t\t            });\n\t    \t}\n\n            }\n        ]);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('filmjoo')\n        .controller('FilmjooGetMovieController', [\n            '$scope',\n      \t    '$http',\n      \t    '$state',\n      \t    'ngNotify',\n      \t    'Settings',\n            '$stateParams',\n            function ($scope,$http,$state,ngNotify,Settings,$stateParams) {\n\n                $http.get(\"/filmjoo/get_movie/\" + $stateParams.movieid)\n                .then(function (response) {\n                        //console.log(response.data.object);\n                        //ngNotify.set(response.data.object);\n                        $scope.result = JSON.parse(response.data.object);\n                });\n\n\n\t\t$scope.getclips = function(title) {\n                      $state.go('stuff', { 'searchtitle':title });\n                  };\n\n                $scope.wronginformations = function(vid) {\n                      \t    $http.get(\"filmjoo/send_faulty/\" + vid)\n\t\t            .then(function (response) {\n\t\t                    //$scope.searchnames = JSON.parse(response.data.object);\n\t\t                      ngNotify.set(response.data.object);\n\t\t            });\n                  };\n\n                $scope.morality = function(vid) {\n\n\t\t            $http.get(\"filmjoo/send_report/\" + vid)\n\t\t            .then(function (response) {\n\t\t                    //$scope.searchnames = JSON.parse(response.data.object);\n\t\t                      ngNotify.set(response.data.object);\n\t\t            });\n                  };\n\n\t\t$scope.searchsubtitles = function(vid, title) {\n\t\t\t    $http.get(\"filmjoo/search_subtitle/\" + vid + '/' + title )\n\t\t            .then(function (response) {\n\t\t\t\t    //console.log(response.data.object);\n\t\t                    //$scope.subtitles = JSON.parse(response.data.object);\n\t\t\t\t    $scope.subtitles = response.data.object;\n\t\t            });\n\t    \t}\n\n            }\n        ]);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('stuff')\n        .factory('StuffImpl', [\n            'Stuff',\n            '$interval',\n            '$uibModal',\n            function (Stuff, $interval, $uibModal) {\n                return function ($scope, $uibModalInstance) {\n\n                    return {\n                    }\n                }\n            }\n        ]);\n})();","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('stuff')\n        .factory('Stuff', [\n            'UriManager',\n            function (UriManager) {\n\n                var uriManager = new UriManager('stuff');\n\n                return {\n\n\n\n                }\n            }\n        ]);\n})();","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('stuff')\n        .config(['$urlRouterProvider', '$stateProvider', '$locationProvider',\n            function ($urlRouterProvider, $stateProvider, $locationProvider) {\n\n                /*$urlRouterProvider.otherwise(function ($injector) {\n                 $injector.get('$state').transitionTo('root', null, {location: false});\n                 });*/\n                $urlRouterProvider.otherwise('/');\n\n                $stateProvider\n\t\t\t.state('stuff', {\n\t\t\t    url: '/stuff/:searchtitle',\n      \t                templateUrl: 'static/ui/modules/stuff/views/stuff-index.html',\n\t                controller: 'StuffController',\n\t\t\t})\n                ;\n            }\n        ]);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('stuff')\n        .controller('StuffController', [\n            '$scope',\n            'StuffImpl',\n      \t    '$http',\n      \t    '$state',\n      \t    'ngNotify',\n      \t    'Settings',\n\t    '$stateParams',\n            function ($scope, StuffImpl,$http,$state,ngNotify,Settings,$stateParams) {\n\t                var impl = new StuffImpl($scope);\n\n\n\n\t\t\tif($stateParams.searchtitle) {\n\t\t\t\t\n                 \t\t\t$http.get(\"media/youtubeSearch/\" + $stateParams.searchtitle)\n            \t\t\t\t.then(function (response) {\n            \t\t\t\t        console.log(response.data.object);\n            \t\t\t\t        $scope.searchnames = JSON.parse(response.data.object);\n            \t\t\t\t});\n\t\t\t}\n\n\n            \t\t$scope.downloadit = function(vid) {\n            \t\t\tSettings.session.url = \"http://www.youtube.com/watch?v=\" + vid;\n            \t\t\t$state.go('media');\n            \t\t};\n\n            \t\t$scope.searchit = function() {\n\t\t\t\t\t/*\n                  \t\t\t\t$http.get(\"media/youtubeSearch/\" + $scope.search)\n            \t\t\t\t.then(function (response) {\n            \t\t\t\t        console.log(response.data.object);\n            \t\t\t\t        $scope.searchnames = JSON.parse(response.data.object);\n            \t\t\t\t});\n\t\t\t\t\t*/\n\t\t\t\t\t$state.go('stuff', { 'searchtitle':$scope.search });\n                }\n            }\n        ]);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('stuff')\n        .factory('StuffImpl', [\n            'Stuff',\n            '$interval',\n            '$uibModal',\n            function (Stuff, $interval, $uibModal) {\n                return function ($scope, $uibModalInstance) {\n\n                    return {\n                    }\n                }\n            }\n        ]);\n})();","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('stuff')\n        .factory('Stuff', [\n            'UriManager',\n            function (UriManager) {\n\n                var uriManager = new UriManager('stuff');\n\n                return {\n\n\n\n                }\n            }\n        ]);\n})();","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('user')\n        .config(['$urlRouterProvider', '$stateProvider', '$locationProvider',\n            function ($urlRouterProvider, $stateProvider, $locationProvider) {\n\n                /*$urlRouterProvider.otherwise(function ($injector) {\n                 $injector.get('$state').transitionTo('root', null, {location: false});\n                 });*/\n                $urlRouterProvider.otherwise('/');\n\n                $stateProvider\n                    .state('user', {\n                        url: '/user',\n                        templateUrl: 'static/ui/modules/user/views/user-index.html',\n                        controller: 'UserController',\n                        resolve: {\n                            feedbacks: [function () {\n                                //this function must return feedback list\n                                return []; //temporarily\n                            }]\n                        }\n                    })\n                ;\n            }\n        ]);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('user')\n        .controller('UserAddFeedbackController', [\n            '$scope',\n            '$uibModalInstance',\n            'UserImpl',\n            'Settings',\n            function ($scope, $uibModalInstance, UserImpl, Settings) {\n                var impl = new UserImpl($scope, $uibModalInstance);\n\n                $scope.model = {};\n\n                if(Settings.session && Settings.session.feedbacktitle) {\n                  $scope.feedbacktitle = Settings.session.feedbacktitle;\n\t\t          Settings.session.feedbacktitle = null; \n                  $scope.feedbackmessage = Settings.session.feedbackmessage;\n\t\t          Settings.session.feedbackmessage = null; \n                }\n\n                $scope.dismissModal = impl.dismissModal;\n                $scope.addFeedback = impl.addFeedback;\n            }\n        ]);\n})();","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('user')\n        .controller('UserPurchaseController', [\n            '$scope',\n            '$uibModalInstance',\n            'UserImpl',\n            function ($scope, $uibModalInstance, UserImpl) {\n                var impl = new UserImpl($scope, $uibModalInstance);\n\n                $scope.model = {};\n                $scope.purchase = impl.purchase;\n                $scope.dismissModal = impl.dismissModal;\n                $scope.addFeedback = impl.addFeedback;\n            }\n        ]);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('core')\n        .controller('UserSubscribeController', [\n            '$scope',\n            '$uibModalInstance',\n            'UserImpl',\n            'Upload',\n            'ngNotify',\n            'Settings',\n            '$state',\n            function ($scope, $uibModalInstance, CoreImpl, Upload, ngNotify, Settings, $state) {\n                var impl = new CoreImpl($scope, $uibModalInstance);\n                $scope.model = {};\n                if ( Settings.session.userurl ) {\n                    $scope.model.email = Settings.session.userurl;\n                    Settings.session.userurl = null; \n                }\n                // upload later on form submit or something similar\n                 $scope.submit = function() {\n                   if ($scope.form.file.$valid && $scope.file) {\n                     $scope.upload($scope.file);\n                   }\n                 };\n\n                 // upload on file select or drop\n                 $scope.upload = function (file) {\n                     Upload.upload({\n                         url: 'user/newsletter',\n                         data: {file: file}\n                     }).then(function (resp) {\n                         console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);\n                         if (resp.data.status != 'ok') {\n                             ngNotify.set(resp.data.message, 'error');\n                             return;\n                         }\n                         ngNotify.set(resp.data.message);\n                         $uibModalInstance.close();\n\n                     }, function (resp) {\n                         console.log('Error status: ' + resp.status);\n                     }, function (evt) {\n                         var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                         console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);\n                     });\n                 };\n\n\n                $scope.dismissModal = impl.dismissModal;\n                $scope.subscribe  = function() {\n                    /*\n                    if ($scope.model.email.indexOf(\"vimeo.\") !=-1 || $scope.model.email.indexOf(\"soundcloud.\") !=-1 || $scope.model.email.indexOf(\"facebook.\") !=-1 || ($scope.model.email.indexOf(\"youtube.\") !=-1 && !($scope.model.email.indexOf(\"list=\") !=-1  || $scope.model.email.indexOf(\"/channel/\") !=-1 ))) {\n                        Settings.session.url = $scope.model.email;\n                        $state.go('media');\n                        impl.dismissModal();\n                        return ;\n                    } else {\n                    */\n                        impl.subscribe();\n                    //}\n                }\n            }\n        ]);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('user')\n        .controller('UserController', [\n            '$scope',\n            'UserImpl',\n            'feedbacks',\n            'uiGridConstants',\n            'ngNotify',\n            'Settings',\n            function ($scope, UserImpl, feedbacks, uiGridConstants, ngNotify, Settings) {\n             //http://78.46.149.230:8080/user/filesList\n\n                var impl = new UserImpl($scope);\n                $scope.model = {};\n\n               $scope.refresh = function(){\n                impl.getPagePremium();\n                impl.getCredit();\n               };\n\n\n                $scope.feedbacks = impl.feedback();\n                $scope.openSubscribeModal = impl.openSubscribeModal;\n                $scope.getPagePremium = impl.getPagePremium;\n                $scope.getPage = impl.getPage;\n                $scope.getCredit = impl.getCredit;\n                $scope.getPurchesList = impl.getPurchesList;\n\n                $scope.refresh();\n\n                if(Settings.session && Settings.session.userurl) {\n                  impl.openSubscribeModal();\n                }\n                // $scope.openAddFeedbackModal = impl.openAddFeedbackModal;\n\n\n\n\n\n            }\n        ]);\n})();\n","(function (undefined) {\n  'use strict';\n\n  angular\n    .module('user')\n    .factory('UserImpl', [\n      'User',\n      '$interval',\n      '$uibModal',\n      'ngNotify',\n      function (User, $interval, $uibModal, ngNotify) {\n        return function ($scope, $uibModalInstance) {\n\n\n          var feedback = function () {\n            var resp = User.feedback($scope.model);\n            if (resp.status == 'ok') {\n                return resp.object.History;\n            } else {\n              console.log(resp.message);\n            }\n          };\n\n          var downloadsHistory = function (paginationOptions) {\n           return User.downloadsHistory(paginationOptions);\n          };\n\n          var downloadsHistoryPremium = function (paginationOptions) {\n           return User.downloadsHistoryPremium(paginationOptions);\n          };\n\n          var downloadsPremiumPurchesPackage = function (paginationOptions) {\n           return User.downloadsPremiumPurchesPackage(paginationOptions);\n          };\n\n          var addFeedback = function () {\n            User.feedback($scope.model)\n              .then(function (resp) {\n                if (resp.status == 'ok') {\n                  alert('feedback was added');\n                   ngNotify.set('بازخورد شما فرستاده  شد، از توجه شما متشکریم');\n                  $uibModalInstance.close(resp);\n                } else {\n                  console.log(resp.message);\n                }\n              }, function (err) {\n                console.log(err);\n              });\n          };\n\n          var dismissModal = function () {\n            $uibModalInstance.dismiss();\n          };\n\n\n          var purchase = function (cost) {\n           User.purchase({\"cost\":cost})\n               .then(function (resp) {\n\n                   if (resp.status != 'ok') {\n                       return;\n                   }\n                   window.location.assign(resp.object);\n                   $uibModalInstance.close(resp);\n               }, function (err) {\n                   console.log(err);\n               });\n           };\n\n\n           var premiumCredit = function () {\n               return User.premiumCredit();\n            };\n\n            var openSubscribeModal = function () {\n                $uibModal\n                    .open({\n                        size: 'sm',\n                        templateUrl: 'static/ui/modules/user/views/user-subscribe-modal.html',\n                        controller: 'UserSubscribeController'\n                    }).result.then(function(resp){\n                         getPagePremium();\n                    },function(){\n                        getPagePremium();\n                    });\n            };\n\n            var subscribe = function () {\n              console.log('subscribe');\n                User.newsletter($scope.model)\n                    .then(function (resp) {\n                        if (resp.status != 'ok') {\n                            ngNotify.set(resp.message, 'error');\n                            $uibModalInstance.close(resp);\n                            return;\n                        }\n\n                        $uibModalInstance.close(resp);\n                        ngNotify.set(resp.message);\n\n                    }, function (err) {\n                        ngNotify.set(resp.message, 'error');\n                    });\n            };\n\n            var paginationOptions = {\n              pageNumber: 1,\n              pageSize: 25,\n              sort: null\n            };\n\n            var getPurchesList = function() {\n                  $scope.listname = \"لیست خریدهای انجام شده\";\n                   $scope.gridOptions = {\n                     paginationPageSizes: [25, 50, 75],\n                     paginationPageSize: 25,\n                     useExternalPagination: true,\n                     useExternalSorting: true,\n                     enableSorting: false,\n                     enableColumnMenus: false,\n                     columnDefs: [\n                     { field: 'ppp_cost', name:'قیمت بسته خریداری شده'},\n                     { field: 'ppp_size', name:'حجم بسته خریداری شده'},\n                     { field: 'pud_created_time',  name:'زمان خرید بسته'}\n                     ],\n                     onRegisterApi: function(gridApi) {\n                       $scope.gridApi = gridApi;\n                       $scope.gridApi.core.on.sortChanged($scope, function(grid, sortColumns) {\n                         if (sortColumns.length == 0) {\n                           paginationOptions.sort = null;\n                         } else {\n                           paginationOptions.sort = sortColumns[0].sort.direction;\n                         }\n                         getPurchesList();\n                       });\n                       gridApi.pagination.on.paginationChanged($scope, function (newPage, pageSize) {\n                         paginationOptions.pageNumber = newPage;\n                         paginationOptions.pageSize = pageSize;\n                         getPurchesList();\n                       });\n                     }\n                   };\n\n                downloadsPremiumPurchesPackage(paginationOptions).then(function (resp) {\n                   if (resp.status == 'ok') {\n                     $scope.gridOptions.totalItems = resp.rowcount;\n                     var firstRow = (paginationOptions.pageNumber - 1) * paginationOptions.pageSize;\n                     //$scope.gridOptions.data = resp.slice(firstRow, firstRow + paginationOptions.pageSize);\n                     $scope.gridOptions.data = resp.object;\n                   } else {\n                     ngNotify.set(resp.message, 'warn');\n                   }\n                 });\n         };\n\n\n\n\n             var getPagePremium = function() {\n                    $scope.listname = \"لیست دانلود های ویژه\";\n                    $scope.gridOptions = {\n                      paginationPageSizes: [25, 50, 75],\n                      paginationPageSize: 25,\n                      useExternalPagination: true,\n                      useExternalSorting: true,\n                      enableSorting: false,\n                      enableColumnMenus: false,\n                      columnDefs: [\n                      { field: 'pud_link', name:'دانلود شما', cellTemplate: '<div class=\"ui-grid-cell-contents\" ><a target=\"_blank\" href=\"{{row.entity.pud_link}}\">{{row.entity.pud_link}}</a></div>'},\n                      { field: 'pud_folder_name', name:'مسیر فایلها', cellTemplate: '<div class=\"ui-grid-cell-contents\" ><a target=\"_blank\" href=\"{{row.entity.pud_folder_name}}\">{{row.entity.pud_folder_name}}</a></div>'},\n                      { field: 'pud_state', name:'وضعیت دانلود'},\n                      { field: 'pud_size', name:'حجم دانلود'},\n                      { field: 'pud_type', name:'نوع دانلود'},\n                      { field: 'pud_Clinton_done_time',  name:'نگه داری حداقل تا زمان'}\n                      ],\n                      onRegisterApi: function(gridApi) {\n                        $scope.gridApi = gridApi;\n                        $scope.gridApi.core.on.sortChanged($scope, function(grid, sortColumns) {\n                          if (sortColumns.length == 0) {\n                            paginationOptions.sort = null;\n                          } else {\n                            paginationOptions.sort = sortColumns[0].sort.direction;\n                          }\n                          getPagePremium();\n                        });\n                        gridApi.pagination.on.paginationChanged($scope, function (newPage, pageSize) {\n                          paginationOptions.pageNumber = newPage;\n                          paginationOptions.pageSize = pageSize;\n                          getPagePremium();\n                        });\n                      }\n                    };\n\n                downloadsHistoryPremium(paginationOptions).then(function (resp) {\n                    if (resp.status == 'ok') {\n                      $scope.gridOptions.totalItems = resp.rowcount;\n                      var firstRow = (paginationOptions.pageNumber - 1) * paginationOptions.pageSize;\n                      //$scope.gridOptions.data = resp.slice(firstRow, firstRow + paginationOptions.pageSize);\n                      $scope.gridOptions.data = resp.object;\n                    } else {\n                      ngNotify.set(resp.message, 'warn');\n                    }\n                  });\n          };\n\n           var getPage = function() {\n                  $scope.listname = \"لیست دانلودهای عادی\";\n                 $scope.gridOptions = {\n                   paginationPageSizes: [25, 50, 75],\n                   paginationPageSize: 25,\n                   useExternalPagination: true,\n                   useExternalSorting: true,\n                   enableSorting: false,\n                   enableColumnMenus: false,\n                   columnDefs: [\n                   { field: 'address', name:'آدرس', cellTemplate: '<div class=\"ui-grid-cell-contents\" ><a target=\"_blank\" href=\"{{row.entity.address}}\">{{row.entity.address}}</a></div>'},\n                   { field: 'date', name:'تاریخ'},\n                   { field: 'title',  name:'عنوان'}\n                   ],\n                   onRegisterApi: function(gridApi) {\n                     $scope.gridApi = gridApi;\n                     $scope.gridApi.core.on.sortChanged($scope, function(grid, sortColumns) {\n                       if (sortColumns.length == 0) {\n                         paginationOptions.sort = null;\n                       } else {\n                         paginationOptions.sort = sortColumns[0].sort.direction;\n                       }\n                       getPage();\n                     });\n                     gridApi.pagination.on.paginationChanged($scope, function (newPage, pageSize) {\n                       paginationOptions.pageNumber = newPage;\n                       paginationOptions.pageSize = pageSize;\n                       getPage();\n                     });\n                   }\n                 };\n\n              downloadsHistory(paginationOptions).then(function (resp) {\n                  if (resp.status == 'ok') {\n                    $scope.gridOptions.totalItems = resp.rowcount;\n                    var firstRow = (paginationOptions.pageNumber - 1) * paginationOptions.pageSize;\n                    //$scope.gridOptions.data = resp.slice(firstRow, firstRow + paginationOptions.pageSize);\n                    $scope.gridOptions.data = resp.object;\n                  } else {\n                    ngNotify.set(resp.message, 'warn');\n                  }\n                });\n        };\n\n      var getCredit = function() {\n        $scope.userCredit = 0;\n        premiumCredit().then(function (resp) {\n            if (resp.status != 'ok') {\n                return;\n            }\n\n            $scope.restCredit = resp.restCredit;\n            $scope.userUsage = resp.userUsage;\n            $scope.totalCredit = resp.totalCredit;\n        }, function (err) {\n            console.log(err);\n        });\n       };\n\n\n          return {\n            feedback: feedback,\n            openSubscribeModal: openSubscribeModal,\n            subscribe: subscribe,\n            dismissModal: dismissModal,\n            addFeedback: addFeedback,\n            downloadsHistory: downloadsHistory,\n            downloadsHistoryPremium: downloadsHistoryPremium,\n            purchase:purchase,\n            premiumCredit:premiumCredit,\n            downloadsPremiumPurchesPackage:downloadsPremiumPurchesPackage,\n            getCredit:getCredit,\n            getPage:getPage,\n            getPagePremium:getPagePremium,\n            getPurchesList:getPurchesList\n          }\n        }\n      }\n    ]);\n})();\n","(function (undefined) {\n    'use strict';\n\n    angular\n        .module('user')\n        .factory('User', [\n            'UriManager',\n            function (UriManager) {\n\n                var uriManager = new UriManager('user');\n\n                return {\n                    feedback: function (data) {\n                        return uriManager.devResolve({\n                            method: 'POST',\n                            path: ['downloadsHistory'],\n                            data: data\n                        });\n                    },\n                    newsletter: function (data) {\n                        return uriManager.resolve({\n                            method: 'POST',\n                            path: ['newsletter'],\n                            data: data\n                        });\n                    },\n                    signUp: function (data) {\n                        return uriManager.resolve({\n                            method: 'POST',\n                            path: ['signup'],\n                            data: data\n                        });\n                    },\n                    reset: function(data) {\n                      return uriManager.resolve({\n                        method: 'POST',\n                        path: ['passRemeberStep3'],\n                        data: data\n                      });\n                    },\n                    passRemeber: function (data) {\n                        return uriManager.resolve({\n                            method: 'POST',\n                            path: ['passRemeber'],\n                            data: data\n                        });\n                    },\n                    login: function (data) {\n                        return uriManager.resolve({\n                            method: 'POST',\n                            path: ['login'],\n                            data: data\n                        });\n                    },\n                    downloadsHistory: function (data) {\n                        return uriManager.resolve({\n                            method: 'POST',\n                            path: ['filesList'],\n                            data: data\n                        });\n                    },\n                    downloadsHistoryPremium: function (data) {\n                        return uriManager.resolve({\n                            method: 'POST',\n                            path: ['premiumFilesList'],\n                            data: data\n                        });\n                    },\n                    downloadsPremiumPurchesPackage: function (data) {\n                        return uriManager.resolve({\n                            method: 'POST',\n                            path: ['purches_list'],\n                            data: data\n                        });\n                    },\n                    purchase: function (data) {\n                        return uriManager.resolve({\n                            method: 'POST',\n                            path: ['purchase'],\n                            data: data\n                        });\n                    },\n                    premiumCredit: function (data) {\n                        return uriManager.resolve({\n                            method: 'POST',\n                            path: ['premiumCredit']\n                        });\n                    }\n\n                }\n            }\n        ]);\n})();\n"]}